#include <algorithm>
#include <cstdint>
#include <random>
#include <string>
#include <vector>

std::string generateRandomKey()
{
    const std::vector<std::string> charset = {
        "A",  "B",  "C",  "D",  "E",  "F",  "G",  "H",  "I",  "J",  "K",  "L",  "M",  "N",  "O",  "P",  "Q",  "R",  "S",  "T",
        "U",  "V",  "W",  "X",  "Y",  "Z",  "a",  "b",  "c",  "d",  "e",  "f",  "g",  "h",  "i",  "j",  "k",  "l",  "m",  "n",
        "o",  "p",  "q",  "r",  "s",  "t",  "u",  "v",  "w",  "x",  "y",  "z",  "0",  "1",  "2",  "3",  "4",  "5",  "6",  "7",
        "8",  "9",  "!",  "@",  "#",  "$",  "%",  "^",  "&",  "*",  "(",  ")",  "_",  "-",  "+",  "=",  "{",  "}",  "[",  "]",
        "|",  ";",  ":",  ",",  ".",  "<",  ">",  "?",  "/",  "~",  "`",  "А",  "Б",  "В",  "Г",  "Д",  "Е",  "Ё",  "Ж",  "З",
        "И",  "Й",  "К",  "Л",  "М",  "Н",  "О",  "П",  "Р",  "С",  "Т",  "У",  "Ф",  "Х",  "Ц",  "Ч",  "Ш",  "Щ",  "Ъ",  "Ы",
        "Ь",  "Э",  "Ю",  "Я",  "а",  "б",  "в",  "г",  "д",  "е",  "ё",  "ж",  "з",  "и",  "й",  "к",  "л",  "м",  "н",  "о",
        "п",  "р",  "с",  "т",  "у",  "ф",  "х",  "ц",  "ч",  "ш",  "щ",  "ъ",  "ы",  "ь",  "э",  "ю",  "я",  "😀", "😁", "😂",
        "🤣", "😃", "😄", "😅", "😆", "😉", "😊", "😋", "😎", "😍", "😘", "🥰", "😗", "😙", "😚", "🙂", "🤗", "🤩", "🤔", "🤨",
        "😐", "😑", "😶", "🙄", "😏", "😣", "😥", "😮", "🤐", "😯", "😪", "😫", "🥱", "😴", "😌", "😛", "😜", "😝", "🤤", "😒",
        "😓", "😔", "😕", "🙃", "🤑", "😲", "☹️",  "🙁", "😖", "😞", "😟", "😤", "😢", "😭", "😦", "😧", "😨", "😩", "🤯", "😬",
        "😰", "😱", "🥵", "🥶", "😳", "🤪", "😵", "🥴", "😠", "😡", "🤬", "😷", "🤒", "🤕", "🤢", "🤮", "🤧", "😇", "🤠", "🤡",
        "🥳", "😈", "👿", "💀", "☠️",  "👻", "👽", "👾", "🤖", "💩", "🔥", "💧", "🌊", "❄️",  "🌈", "🌍", "🌎", "🌏", "⭐️", "🌟",
        "✨", "⚡️", "💥", "💫", "💨", "🕳", "💣", "🔔", "🎉", "🎊", "🎈", "🪄", "🔮", "❤️",  "🧡", "💛", "💚", "💙", "💜", "🖤",
        "🤍", "🤎", "💔", "💖", "💗", "💓", "💞", "💕", "💘", "💝", "💟", "💌", "☕️", "🍕", "🍔", "🍟", "🌮", "🌯", "🥗", "🍩",
        "🍪", "🍣", "🍙", "🍱", "🍜", "🍰", "🎂", "🧁", "🍿", "🍫", "🍬", "🍭", "🚗", "🚕", "🚙", "🚌", "🚎", "🏎", "🚓", "🚑",
        "🚒", "🚐", "🛻", "🚚", "🚛", "🚜", "🚀", "✈️",  "🛸", "⛵️", "🚢", "⚓️", "♟",  "♜",  "♞",  "♝",  "♛",  "♚",  "🎯", "🎮",
        "🎲", "🧩", "§",  "©",  "™",  "✓",  "←",  "→",  "↑",  "↓",  "↔️",  "⇄",  "⇧",  "≠",  "≈",  "≤",  "≥",  "÷",  "×",  "¢",
        "£",  "€",  "¥"};

    std::random_device randomDevice;
    std::mt19937 gen(randomDevice());
    std::uniform_int_distribution<> lenDist(10, 100);
    std::uniform_int_distribution<> charDist(0, static_cast<int>(charset.size() - 1)); // случайны индекс

    // генерируем ключ
    uint64_t length = lenDist(gen);
    std::string key;
    key.reserve(length * 2); // запас с учётом многобайтовых символов

    for (uint64_t i = 0; i < length; ++i)
    {
        key += charset[charDist(gen)];
    }

    return key;
}

std::string autoGenerateKey(const std::string& cipherName, uint64_t textLength)
{
    if (cipherName.find("Скитала") != std::string::npos)
    {
        int guess = std::clamp((int) std::sqrt(textLength), 2, 100);
        return std::to_string(guess);
    }
    return generateRandomKey();
}
